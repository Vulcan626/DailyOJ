/*
题目描述

A newly opened detective agency is struggling with their limited intelligence to find out a secret information passing technique among its detectives. Since they are new in this profession, they know well that their messages will easily be trapped and hence modified by other groups. They want to guess the intensions of other groups by checking the changed sections of messages. First they have to get the length of longest match. You are going to
help them.
输入

The input file may contain multiple test cases. Each case will contain two successive lines of string. Blank lines and non-letter printable punctuation characters may appear. Each Line of string will be no longer than 1000 characters. Length of each word will be less than 20 characters.
输出

For each case of input, you have to output a line starting with the case no right justified in a field width of two, followed by the longest match as shown in the sample output. In case of at least one blank line for each input output 'Blank!'. Consider the non-letter punctuation characters as white-spaces.
样例输入

This is a test.
test
Hello!

The document provides late-breaking information
late breaking.
样例输出

 1. Length of longest match: 1
 2. Blank!
 3. Length of longest match: 2
*/

#include<bits/stdc++.h>
using namespace std;
char buf[1001];
char s1[1001][22];
char s2[1001][22];
int f[1001][1001];
int letter(char c){
    if(c>='a' && c<='z') return 1;
    else if(c>='A' && c<='Z') return 1;
    else if (c>='0' && c<='9') return 1;
    return 0;
}
int getword(char s[][22],char *t){
    int move=0,count=0;
    while(t[move]){
        while(t[move] && !letter(t[move]))
            move ++;
        if(!t[move]) break;
        int now=move;
        while(letter(t[move]))
            move++;
        int save=0;
        while(now<move)
            s[count][save++]=t[now++];
        s[count][save]=0;
        count++;
    }
    return count;
}
int main(){
    int blank=0,l1,l2,cases=1;
    while(gets(buf)){
        if(!strlen(buf)) blank=1;
        l1=getword(s1,buf);
        gets(buf);
        if(!strlen(buf)) blank=1;
        l2=getword(s2,buf);
        
        printf("%2d. ",cases++);
        if(blank){
            printf("Blank!\n");
            blank=0;
        }
        else{
            for(int i=0;i<=l1;++i)
                for(int j=0;j<=l2;++j)
                    f[i][j]=0;
            for(int i=1;i<=l1;++i)
                for(int j=1;j<=l2;++j){
                    f[i][j]=f[i-1][j];
                    if(f[i][j]<f[i][j-1])
                        f[i][j]=f[i][j-1];
                    if(!strcmp(s1[i-1],s2[j-1]))
                        f[i][j]=f[i-1][j-1]+1;
                }
            printf("Length of longest match: %d\n",f[l1][l2]);
        }
    }
    return 0;
}
