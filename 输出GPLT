/*
7-7 输出GPLT
分数 20

全屏浏览题目

切换布局
作者 陈越
单位 浙江大学
给定一个长度不超过10000的、仅由英文字母构成的字符串。请将字符重新调整顺序，按GPLTGPLT....这样的顺序输出，并忽略其它字符。当然，四种字符（不区分大小写）的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按GPLT的顺序打印，直到所有字符都被输出。
输入格式：

输入在一行中给出一个长度不超过10000的、仅由英文字母构成的非空字符串。
输出格式：

在一行中按题目要求输出排序后的字符串。题目保证输出非空。
输入样例：

pcTclnGloRgLrtLhgljkLhGFauPewSKgt
输出样例：

GPLTGPLTGLTGLGLL
*/



#include<bits/stdc++.h>
using namespace std;
const int N=10001;
char gplt[4]={'G','P','L','T'};
int main(){
    char str[N];
    cin>>str;
    int i=0;
    int g=0,p=0,l=0,t=0;
    int min=10000;
    while(str[i]!='\0'){
        if(str[i]=='G' or str[i]=='g') g++;
        if(min>g) min=g;
        if(str[i]=='P' or str[i]=='p') p++;
        if(min>p) min=p;
        if(str[i]=='L' or str[i]=='l') l++;
        if(min>l) min=l;
        if(str[i]=='T' or str[i]=='t') t++;
        if(min>t) min=t;
        i++;
    }
    for(int j=0;j<min;j++) cout<<"GPLT";
    g=g-min;
    p=p-min;
    l=l-min;
    t=t-min;
    while(g>0 or p>0 or l>0 or t>0){
        if(g>0){
            cout<<"G";
            g--;
        }
        if(p>0){
            cout<<"P";
            p--;
        }
        if(l>0){
            cout<<"L";
            l--;
        }
        if(t>0){
            cout<<"T";
            t--;
        }
    }
    return 0;
}
