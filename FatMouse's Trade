/*
题目描述

FatMouse prepared M pounds of cat food, ready to trade with the cats guarding the warehouse containing his favorite food, JavaBean.
The warehouse has N rooms. The i-th room contains J[i] pounds of JavaBeans and requires F[i] pounds of cat food. FatMouse does not have to trade for all the JavaBeans in the room, instead, he may get J[i]* a% pounds of JavaBeans if he pays F[i]* a% pounds of cat food. Here a is a real number. Now he is assigning this homework to you: tell him the maximum amount of JavaBeans he can obtain. 


输入

The input consists of multiple test cases. Each test case begins with a line containing two non-negative integers M and N. Then N lines follow, each contains two non-negative integers J[i] and F[i] respectively. The last test case is followed by two -1's. All integers are not greater than 1000.


输出

For each test case, print in a single line a real number accurate up to 3 decimal places, which is the maximum amount of JavaBeans that FatMouse can obtain.


样例输入

4 2
4 7
1 3
5 5
4 8
3 8
1 2
2 5
2 4
-1 -1
样例输出

2.286
2.500
*/

#include<bits/stdc++.h>
using namespace std;
struct room{
    double j,f,p;
}r[1010];
bool cmp(room a,room b){
    return a.p>b.p;
}
int main(){
    double sum;
    int n;
    while(~scanf("%lf %d",&sum,&n)){
        if(n==-1)   break;
        for(int i=0;i<n;i++){
            scanf("%lf %lf",&r[i].j,&r[i].f);
            if(r[i].f!=0)
                r[i].p=r[i].j/r[i].f;
            else
                r[i].p=1000;
        }
        sort(r,r+n,cmp);
        double ans=0;
        for(int i=0;i<n;i++){
            if(sum>=r[i].f){
                sum-=r[i].f;
                ans+=r[i].j;
            }
            else if(sum>0&&sum<r[i].f){
                ans+=sum/r[i].f*r[i].j;
                break;
            }
        }
        printf("%.3f\n",ans);
    }
    return 0;
}
